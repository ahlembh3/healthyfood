{# templates/recette/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}{{ recette.titre }} ‚Äî Recette{% endblock %}
{% block page_title %}{{ recette.titre }}{% endblock %}

{% block content %}

    {# --- Image principale (centr√©e, ratio, sans upscaling) --- #}
    {% set title = recette.titre|default('') %}
    {% set ascii = title|lower|replace({
        '√©':'e','√®':'e','√™':'e','√´':'e','√†':'a','√¢':'a','√§':'a','√π':'u','√ª':'u','√º':'u','√Æ':'i','√Ø':'i','√¥':'o','√∂':'o','√ß':'c',
        '‚Äô':'','\'':'','"':'','(':'',')':'','/':'_','\\':'_','&':'et',',':'',':':'',';':'','?':'','!':'','.':'','-':'_'
    }) %}
    {% set slug  = ascii|replace({'  ':' '})|trim|replace({' ':'_'}) %}
    {% set guessJpg = 'uploads/recettes/' ~ slug ~ '.jpg' %}
    {% set guessPng = 'uploads/recettes/' ~ slug ~ '.png' %}

    {% set img  = recette.image|default('')|trim %}
    {% set src0 = img
        ? (img starts with 'http' ? img : asset((img starts with 'uploads/' ? img : 'uploads/recettes/' ~ img)))
        : asset(guessJpg)
    %}
    {% set src1 = asset(guessPng) %}
    {% set ph   = asset('images/placeholders/placeholder-recette.jpg') %}

    <figure class="mx-auto mb-4" style="max-width: 720px;">
        <div class="ratio ratio-16x9 rounded shadow overflow-hidden">
            <img
                    src="{{ src0 }}"
                    alt="{{ title ?: 'Recette' }}"
                    class="media-fill"
                    loading="eager"
                    decoding="async"
                    fetchpriority="high"
                    onerror="if(!this.dataset.tryPng){this.dataset.tryPng=1;this.src='{{ src1 }}';}else{this.onerror=null;this.src='{{ ph }}';}"
            >
        </div>

        {% if recette.description %}
            <figcaption class="text-muted small mt-2">
                {{ recette.description|u.truncate(140, '‚Ä¶') }}
            </figcaption>
        {% endif %}
    </figure>

    <div class="row g-4">
        {# --- Infos pratiques --- #}
        <section class="col-lg-4" aria-labelledby="info-pratiques">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <h2 id="info-pratiques" class="h5 card-title mb-3">‚ÑπÔ∏è Infos pratiques</h2>
                    <ul class="list-unstyled mb-0">
                        <li><strong>Pr√©paration :</strong> {{ recette.tempsPreparation }} min</li>
                        {% if recette.tempsCuisson is not null %}
                            <li><strong>Cuisson :</strong> {{ recette.tempsCuisson }} min</li>
                        {% endif %}
                        <li><strong>Difficult√© :</strong> {{ recette.difficulte ?? '‚Äî' }}</li>
                        <li><strong>Portions :</strong> {{ recette.portions ?? 1 }} personne(s)</li>
                    </ul>
                </div>
            </div>
        </section>

        {# --- Ingr√©dients --- #}
        <section class="col-lg-5" aria-labelledby="ingredients">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <h2 id="ingredients" class="h5 card-title mb-3">üì¶ Ingr√©dients</h2>

                    {% if recette.recetteIngredients is not empty %}
                        <ul class="mb-0">
                            {% for ri in recette.recetteIngredients %}
                                {% set ing = ri.ingredient %}
                                <li>
                                    {% if ing %}
                                        <strong>{{ ing.nom }}</strong> ‚Äî {{ ri.quantite }}
                                        {% if ing.unite %} {{ ing.unite }}{% endif %}
                                        {% if ing.allergenes %}
                                            <span class="badge text-bg-warning ms-2">Allerg√®nes : {{ ing.allergenes }}</span>
                                        {% endif %}
                                    {% else %}
                                        <em>Ingr√©dient supprim√©</em>
                                    {% endif %}
                                </li>
                            {% endfor %}
                        </ul>
                    {% else %}
                        <p class="text-muted mb-0">Aucun ingr√©dient.</p>
                    {% endif %}
                </div>
            </div>
        </section>

        {# --- Nutrition (approx.) --- #}
        <section class="col-lg-3" aria-labelledby="nutrition">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <h2 id="nutrition" class="h5 card-title mb-3">üçΩÔ∏è Valeurs nutritionnelles</h2>
                    {% set calories = 0 %}
                    {% set proteines = 0 %}
                    {% set glucides  = 0 %}
                    {% set lipides   = 0 %}

                    {% for ri in recette.recetteIngredients %}
                        {% set ing = ri.ingredient %}
                        {% if ing %}
                            {% set unit = (ing.unite|default('')|lower)|trim %}
                            {% set isMass = unit in ['g','gramme','grammes'] %}
                            {% set isVol  = unit in ['ml','millilitre','millilitres'] %}
                            {% if isMass or isVol %}
                                {% set q = ri.quantite|default(0) %}
                                {% set factor = q / 100 %}
                                {% set calories = calories + (ing.calories|default(0)) * factor %}
                                {% set proteines = proteines + (ing.proteines|default(0)) * factor %}
                                {% set glucides  = glucides  + (ing.glucides|default(0))  * factor %}
                                {% set lipides   = lipides   + (ing.lipides|default(0))   * factor %}
                            {% endif %}
                        {% endif %}
                    {% endfor %}

                    <div class="table-responsive">
                        <table class="table table-sm mb-2">
                            <caption class="visually-hidden">Totaux approximatifs pour la recette</caption>
                            <tbody>
                            <tr><th scope="row">Calories</th><td>{{ calories|round(0, 'common') }} kcal</td></tr>
                            <tr><th scope="row">Prot√©ines</th><td>{{ proteines|round(1, 'common') }} g</td></tr>
                            <tr><th scope="row">Glucides</th><td>{{ glucides|round(1, 'common') }} g</td></tr>
                            <tr><th scope="row">Lipides</th><td>{{ lipides|round(1, 'common') }} g</td></tr>
                            </tbody>
                        </table>
                    </div>

                    <small class="text-muted d-block">
                        * Calcul bas√© sur les ingr√©dients en g/ml (‚âà pour 100 g/ml). Les unit√©s en ‚Äúpi√®ce/gousse‚Äù ne sont pas comptabilis√©es.
                    </small>
                </div>
            </div>
        </section>
    </div>

    {# --- √âtapes --- #}
    <section class="card shadow-sm my-4" aria-labelledby="etapes">
        <div class="card-body">
            <h2 id="etapes" class="h5 card-title mb-3">üë®‚Äçüç≥ √âtapes</h2>
            {% set instr = recette.instructions|default('') %}
            {% set normalized = instr
                |replace({'\r\n':'\n','\r':'\n','<br>':'\n','<br/>':'\n','<br />':'\n'})
                |striptags
            %}
            {% set steps = normalized|split('\n')|filter(s => s|trim != '') %}
            {% if steps|length > 0 %}
                <ol class="mb-0">
                    {% for step in steps %}
                        <li class="mb-2">{{ step|trim }}</li>
                    {% endfor %}
                </ol>
            {% else %}
                <p class="text-muted mb-0">Aucune instruction d√©taill√©e.</p>
            {% endif %}
        </div>
    </section>

    {# ======= üí¨ Commentaires AVANT les tisanes sugg√©r√©es ======= #}
    <section aria-labelledby="commentaires">
        <h2 id="commentaires" class="h5 mb-3">üí¨ Commentaires</h2>

        {# On ne garde que les non signal√©s #}
        {% set commentairesAffiches = (commentaires|default([]))|filter(c =>
            not (attribute(c,'signaler') ?? attribute(c,'isSignaler') ?? attribute(c,'reported') ?? false)
            ) %}


        {% for commentaire in commentairesAffiches %}
            <article class="mb-3 p-3 border rounded shadow-sm bg-light" aria-labelledby="cmt-{{ commentaire.id }}">
                <div class="d-flex justify-content-between">
                    <h3 id="cmt-{{ commentaire.id }}" class="h6 mb-1">
                        {{ commentaire.utilisateur ? commentaire.utilisateur.prenom : 'Utilisateur supprim√©' }}
                    </h3>
                    <small class="text-muted">{{ commentaire.date|date('d/m/Y H:i') }}</small>
                </div>

                <p class="mb-1">Note : {{ commentaire.note ?? "non not√©" }}</p>
                <p class="mb-0">{{ commentaire.contenu }}</p>

                {% if app.user and commentaire.SignalePar is null and commentaire.utilisateur != app.user %}
                    <form
                            method="post"
                            action="{{ path('commentaire_signaler', {'id': commentaire.id}) }}"
                            class="mt-2 d-inline"
                            onsubmit="if(confirm('Voulez-vous signaler ce commentaire ?')){ this.querySelector('button[type=submit]').disabled = true; return true; } return false;">
                        <input type="hidden" name="_token" value="{{ csrf_token('signaler' ~ commentaire.id) }}">
                        <button class="btn btn-sm btn-outline-warning">Signaler</button>
                    </form>
                {% endif %}
            </article>
        {% else %}
            <p class="text-muted">Aucun commentaire pour cette recette.</p>
        {% endfor %}

        {% if app.user %}
            <div class="card my-4 shadow-sm">
                <div class="card-body">
                    <h2 class="h5 card-title">‚úçÔ∏è Laisser un commentaire</h2>

                    {# ‚Äî‚Äî‚Äî R√©sum√© d‚Äôerreurs global si soumis mais invalide ‚Äî‚Äî‚Äî #}
                    {% set wasSubmitted = form.vars.submitted ?? false %}
                    {% set isValid = form.vars.valid ?? true %}
                    {% if wasSubmitted and not isValid %}
                        <div class="alert alert-danger" role="alert">
                            <strong>Le commentaire n‚Äôa pas √©t√© envoy√©.</strong>
                            <div class="mt-2">Merci de corriger&nbsp;:</div>
                            <ul class="mb-0 mt-2">
                                {# erreurs globales du formulaire #}
                                {% for err in form.vars.errors %}
                                    <li>{{ err.message }}</li>
                                {% endfor %}

                                {# erreurs champ par champ (compatibilit√© Twig : pas de "if" inline) #}
                                {% for field in form %}
                                    {% if field.vars.errors|length > 0 %}
                                        {% for err in field.vars.errors %}
                                            <li>
                                                <strong>{{ field.vars.label|default(field.vars.name|capitalize) }} :</strong>
                                                {{ err.message }}
                                            </li>
                                        {% endfor %}
                                    {% endif %}
                                {% endfor %}
                            </ul>
                        </div>
                    {% endif %}


                    {{ form_start(form, { attr: { novalidate: 'novalidate', 'data-turbo': 'false' } }) }}

                    {# Contenu #}
                    <div class="mb-3">
                        {{ form_label(form.contenu, 'Votre commentaire') }}
                        {{ form_widget(form.contenu, {
                            attr: {
                                class: 'form-control' ~ (form.contenu.vars.errors|length ? ' is-invalid' : ''),
                                rows: 3,
                                placeholder: '√âcrivez votre avis‚Ä¶'
                            }
                        }) }}
                        {% if form.contenu.vars.errors|length %}
                            <div class="invalid-feedback d-block">
                                {% for e in form.contenu.vars.errors %}{{ e.message }}{% if not loop.last %}<br>{% endif %}{% endfor %}
                            </div>
                        {% endif %}
                    </div>

                    {# NOTE ‚Äî √©toiles interactives + input cach√© envoy√© au serveur #}
                    <div class="mb-3">
                        <label class="form-label">Votre note</label>

                        {# input cach√© qui sera envoy√© (garde l‚Äôid & le name du champ ‚Äúnote‚Äù) #}
                        <input type="hidden"
                               id="{{ form.note.vars.id }}"
                               name="{{ form.note.vars.full_name }}"
                               value="{{ form.note.vars.value is not null ? form.note.vars.value : '' }}">

                        <div class="rating-stars"
                             role="radiogroup"
                             aria-label="Note sur 5"
                             data-input-id="{{ form.note.vars.id }}">
                            {% set current = form.note.vars.value ?? 0 %}
                            {% for i in 1..5 %}
                                {% set active = i <= current %}
                                <button type="button"
                                        class="star-btn{{ active ? ' is-active' : '' }}"
                                        role="radio"
                                        aria-checked="{{ active ? 'true' : 'false' }}"
                                        data-value="{{ i }}"
                                        title="{{ i }}/5">‚òÖ</button>
                            {% endfor %}
                            <button type="button" class="btn btn-sm btn-outline-secondary ms-2" data-rating-clear>Effacer</button>
                        </div>

                        {% if form.note.vars.errors|length %}
                            <div class="invalid-feedback d-block mt-2">
                                {% for e in form.note.vars.errors %}{{ e.message }}{% if not loop.last %}<br>{% endif %}{% endfor %}
                            </div>
                        {% endif %}
                        <small class="text-muted d-block mt-1">Cliquez pour noter (facultatif).</small>
                    </div>
                    {% do form.note.setRendered %}


                    <button class="btn btn-primary">Envoyer</button>
                    {{ form_end(form) }}
                </div>
            </div>

        {% else %}
            <div class="alert alert-warning mt-4">
                Vous devez <a href="{{ path('app_login') }}" class="alert-link">vous connecter</a> pour commenter.
            </div>
        {% endif %}
    </section>

    {# --- (Optionnel) Note moyenne apr√®s commentaires --- #}
    {% if moyenne is defined %}
        <section class="mb-3" aria-labelledby="note-moyenne">
            <h2 id="note-moyenne" class="visually-hidden">Note moyenne</h2>
            {% if moyenne is not null %}
                <div aria-label="Note moyenne {{ moyenne }}/5">
                    {% for i in 1..5 %}{{ i <= moyenne ? '‚≠ê' : '‚òÜ' }}{% endfor %}
                    ({{ moyenne|number_format(1, '.', ' ') }}/5)
                </div>
            {% else %}
                <p class="text-muted">Pas encore de note.</p>
            {% endif %}
        </section>
    {% endif %}

    {# --- Tisanes sugg√©r√©es APR√àS les commentaires --- #}
    {% if tisanesSuggerees is defined and tisanesSuggerees|length > 0 %}
        <section class="card shadow-sm mb-4" aria-labelledby="tisanes-sugg">
            <div class="card-body">
                <h2 id="tisanes-sugg" class="h5 card-title mb-3">üåø Tisanes sugg√©r√©es</h2>
                <div class="row g-3">
                    {% for tisane in tisanesSuggerees %}
                        <div class="col-md-4">
                            <div class="border rounded h-100 p-3 d-flex">
                                <img
                                        src="{{ tisane.image ? asset('uploads/tisanes/' ~ tisane.image) : asset('images/placeholder-tea.jpg') }}"
                                        alt="{{ tisane.nom }}"
                                        class="rounded me-3"
                                        style="width:80px;height:80px;object-fit:cover;"
                                        loading="lazy">
                                <div>
                                    <a href="{{ path('tisane_show', {'id': tisane.id}) }}" class="fw-semibold d-block mb-1">
                                        {{ tisane.nom }}
                                    </a>
                                    {% if tisane.bienfaits|default([])|length > 0 %}
                                        <small class="text-muted d-block">
                                            Bienfaits :
                                            {% for b in tisane.bienfaits %}
                                                {{ loop.first ? '' : ', ' }}{{ b.nom }}
                                            {% endfor %}
                                        </small>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </section>
    {% endif %}

    {# --- Navigation & gestion --- #}
    {% set routeRetour  = backRoute|default('recette_index') %}
    {% set paramsRetour = backParams|default({}) %}
    {% set defaultBackUrl = path(routeRetour, paramsRetour) %}
    {% set ref = app.request.headers.get('referer')|default('') %}
    {% set host = app.request.schemeAndHttpHost %}
    {# on utilise le referer s'il est interne, sinon fallback route #}
    {% set backUrl = (ref and (ref starts with host or ref starts with '/')) ? ref : defaultBackUrl %}

    <div class="d-flex flex-wrap gap-2 mt-4">
        <a href="{{ backUrl }}" class="btn btn-outline-secondary">Retour √† la liste</a>

        {% set isOwner = app.user and recette.utilisateur and app.user.id == recette.utilisateur.id %}
        {% set canManage = is_granted('ROLE_ADMIN') or (isOwner and not recette.validation) %}
        {% if canManage %}
            <a href="{{ path('recette_edit', {'id': recette.id}) }}" class="btn btn-primary">Modifier</a>
            {{ include('recette/_delete_form.html.twig') }}
        {% endif %}
    </div>

{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        (function(){
            function initRating(root){
                if (!root || root.dataset.bound) return;
                root.dataset.bound = '1';

                const inputId = root.getAttribute('data-input-id');
                const input = document.getElementById(inputId);
                if (!input) return;

                const stars = Array.from(root.querySelectorAll('.star-btn'));
                const clearBtn = root.querySelector('[data-rating-clear]');

                function setValue(v){
                    const val = (v >= 1 && v <= 5) ? String(v) : '';
                    input.value = val;
                    stars.forEach((b, idx) => {
                        const active = (idx + 1) <= (val ? parseInt(val,10) : 0);
                        b.classList.toggle('is-active', active);
                        b.setAttribute('aria-checked', active ? 'true' : 'false');
                    });
                }

                // init √† la valeur actuelle
                setValue(input.value ? parseInt(input.value,10) : 0);

                stars.forEach(btn => {
                    btn.addEventListener('click', () => {
                        const v = parseInt(btn.dataset.value, 10);
                        // re-cliquer la m√™me valeur = effacer (option sympa)
                        const current = parseInt(input.value || '0', 10);
                        setValue(current === v ? 0 : v);
                    });
                    btn.addEventListener('keydown', (e) => {
                        if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); btn.click(); }
                        if (e.key === 'ArrowLeft' || e.key === 'ArrowDown') {
                            e.preventDefault(); setValue((parseInt(input.value||'0',10) || 1) - 1);
                        }
                        if (e.key === 'ArrowRight' || e.key === 'ArrowUp') {
                            e.preventDefault(); setValue((parseInt(input.value||'0',10) || 0) + 1);
                        }
                    });
                });

                if (clearBtn){
                    clearBtn.addEventListener('click', () => setValue(0));
                }
            }

            function scan(){
                document.querySelectorAll('.rating-stars').forEach(initRating);
            }

            // classique + navigation Turbo
            document.addEventListener('DOMContentLoaded', scan);
            document.addEventListener('turbo:load', scan);
            document.addEventListener('turbo:render', scan);
        })();
    </script>
{% endblock %}

